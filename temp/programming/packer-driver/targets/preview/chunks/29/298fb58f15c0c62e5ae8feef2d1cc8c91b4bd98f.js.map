{"version":3,"sources":["file:///G:/Cocos/KillGrass/PlayableMowGame/PlayableMowGame/assets/scripts/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","Vec3","CCFloat","instantiate","Enemy","ccclass","property","GameManager","type","tooltip","_gameStartTime","_lastSpawnTime","_spawnedPositions","_activeEnemies","Set","onLoad","mapNode","node","parent","getChildByName","setSiblingIndex","setPosition","position","x","y","Date","now","spawnInitialEnemies","update","spawnInterval","trySpawnEnemies","forEach","enemy","isValid","delete","i","initialSpawnCount","spawnSingleEnemy","size","maxEnemies","player","normalEnemyPrefab","isElite","Math","random","eliteRate","prefab","eliteEnemyPrefab","spawnPos","getValidSpawnPosition","setWorldPosition","enemyComp","getComponent","target","setElite","push","add","playerPos","worldPosition","maxAttempts","angle","PI","distance","maxSpawnRadius","minSpawnRadius","cos","sin","pos","isValidSpawnPosition","minDistance","spawnedPos","onDestroy","clear"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, Vec3, CCFloat, instantiate, Sprite, Color } from 'cc';\nimport { Enemy } from './Enemy';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    @property({ type: Node, tooltip: '玩家节点' })\n    public player: Node | null = null;\n\n    @property({ type: Prefab, tooltip: '普通敌人预制体' })\n    public normalEnemyPrefab: Prefab | null = null;\n\n    @property({ type: Prefab, tooltip: '精英敌人预制体' })\n    public eliteEnemyPrefab: Prefab | null = null;\n\n    @property({ type: CCFloat, tooltip: '初始化刷怪数量' })\n    public initialSpawnCount: number = 20;\n\n    @property({ type: CCFloat, tooltip: '刷怪最小半径' })\n    public minSpawnRadius: number = 200;\n\n    @property({ type: CCFloat, tooltip: '刷怪最大半径' })\n    public maxSpawnRadius: number = 500;\n\n    @property({ type: CCFloat, tooltip: '刷怪频率(秒)' })\n    public spawnInterval: number = 10;\n\n    @property({ type: CCFloat, tooltip: '刷怪上限' })\n    public maxEnemies: number = 100;\n\n    @property({ type: CCFloat, tooltip: '精英怪出现概率(%)' })\n    public eliteRate: number = 10;\n\n    private _gameStartTime: number = 0;\n    private _lastSpawnTime: number = 0;\n    private _spawnedPositions: Vec3[] = [];\n    private _activeEnemies: Set<Node> = new Set();\n\n    onLoad() {\n        // 获取地图节点\n        const mapNode = this.node.parent?.getChildByName('map');\n        if (mapNode) {\n            // 将地图设置为最底层\n            mapNode.setSiblingIndex(0);\n            // 设置 z 轴位置确保在最底下\n            mapNode.setPosition(mapNode.position.x, mapNode.position.y, -1);\n        }\n    \n        this._gameStartTime = Date.now();\n        this._lastSpawnTime = this._gameStartTime;\n        this.spawnInitialEnemies();\n    }\n\n    update() {\n        const now = Date.now();\n        if (now - this._lastSpawnTime >= this.spawnInterval * 1000) {\n            this.trySpawnEnemies();\n            this._lastSpawnTime = now;\n        }\n\n        // 清理无效敌人\n        this._activeEnemies.forEach(enemy => {\n            if (!enemy.isValid) {\n                this._activeEnemies.delete(enemy);\n            }\n        });\n    }\n\n    private spawnInitialEnemies() {\n        for (let i = 0; i < this.initialSpawnCount; i++) {\n            this.spawnSingleEnemy();\n        }\n    }\n\n    private trySpawnEnemies() {\n        if (this._activeEnemies.size >= this.maxEnemies) {\n            return;\n        }\n        this.spawnSingleEnemy();\n    }\n\n    private spawnSingleEnemy() {\n        if (!this.player || !this.normalEnemyPrefab) return;\n\n        const isElite = Math.random() * 100 < this.eliteRate;\n        const prefab = isElite && this.eliteEnemyPrefab ? this.eliteEnemyPrefab : this.normalEnemyPrefab;\n\n        const spawnPos = this.getValidSpawnPosition();\n        if (!spawnPos) return;\n\n        const enemy = instantiate(prefab);\n        enemy.parent = this.node;\n        enemy.setWorldPosition(spawnPos);\n\n        const enemyComp = enemy.getComponent(Enemy);\n        if (enemyComp) {\n            enemyComp.target = this.player;\n            enemyComp.isElite = isElite;\n            if (isElite) {\n                enemyComp.setElite();\n            }\n        }\n\n        this._spawnedPositions.push(spawnPos);\n        this._activeEnemies.add(enemy);\n    }\n\n    private getValidSpawnPosition(): Vec3 | null {\n        if (!this.player) return null;\n\n        const playerPos = this.player.worldPosition;\n        const maxAttempts = 10;\n\n        for (let i = 0; i < maxAttempts; i++) {\n            const angle = Math.random() * Math.PI * 2;\n            const distance = Math.random() * (this.maxSpawnRadius - this.minSpawnRadius) + this.minSpawnRadius;\n            const x = playerPos.x + Math.cos(angle) * distance;\n            const y = playerPos.y + Math.sin(angle) * distance;\n            const pos = new Vec3(x, y, 0);\n\n            if (this.isValidSpawnPosition(pos)) {\n                return pos;\n            }\n        }\n        return null;\n    }\n\n    private isValidSpawnPosition(pos: Vec3): boolean {\n        const minDistance = 50;\n        for (const spawnedPos of this._spawnedPositions) {\n            if (Vec3.distance(pos, spawnedPos) < minDistance) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    onDestroy() {\n        this._activeEnemies.clear();\n        this._spawnedPositions = [];\n    }\n}"]}