{"version":3,"sources":["file:///G:/Cocos/KillGrass/PlayableMowGame/PlayableMowGame/assets/scripts/CameraController.ts"],"names":["_decorator","Component","Node","Vec3","Camera","ccclass","property","CameraController","type","tooltip","_camera","_currentPos","_targetPos","start","getComponent","target","pos","worldPosition","set","x","y","node","setWorldPosition","lateUpdate","deltaTime","targetWorldPos","lerp","followSpeed"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;;;;;;;;OACtC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;kCAGjBO,gB,WADZF,OAAO,CAAC,kBAAD,C,UAEHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN,IAAR;AAAcO,QAAAA,OAAO,EAAE;AAAvB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEG,QAAAA,OAAO,EAAE;AAAX,OAAD,C,2BALb,MACaF,gBADb,SACsCN,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAOpCS,OAPoC,GAOX,IAPW;AAAA,eAQpCC,WARoC,GAQhB,IAAIR,IAAJ,EARgB;AAAA,eASpCS,UAToC,GASjB,IAAIT,IAAJ,EATiB;AAAA;;AAW5CU,QAAAA,KAAK,GAAG;AACJ,eAAKH,OAAL,GAAe,KAAKI,YAAL,CAAkBV,MAAlB,CAAf;;AACA,cAAI,KAAKW,MAAT,EAAiB;AACb,gBAAMC,GAAG,GAAG,KAAKD,MAAL,CAAYE,aAAxB;;AACA,iBAAKN,WAAL,CAAiBO,GAAjB,CAAqBF,GAAG,CAACG,CAAzB,EAA4BH,GAAG,CAACI,CAAhC,EAAmC,IAAnC;;AACA,iBAAKC,IAAL,CAAUC,gBAAV,CAA2B,KAAKX,WAAhC;AACH;AACJ;;AAEDY,QAAAA,UAAU,CAACC,SAAD,EAAoB;AAC1B,cAAI,CAAC,KAAKT,MAAV,EAAkB,OADQ,CAG1B;;AACA,cAAMU,cAAc,GAAG,KAAKV,MAAL,CAAYE,aAAnC;;AACA,eAAKL,UAAL,CAAgBM,GAAhB,CAAoBO,cAAc,CAACN,CAAnC,EAAsCM,cAAc,CAACL,CAArD,EAAwD,IAAxD,EAL0B,CAO1B;;;AACAjB,UAAAA,IAAI,CAACuB,IAAL,CAAU,KAAKf,WAAf,EAA4B,KAAKA,WAAjC,EAA8C,KAAKC,UAAnD,EAA+D,KAAKe,WAAL,GAAmBH,SAAlF;AACA,eAAKH,IAAL,CAAUC,gBAAV,CAA2B,KAAKX,WAAhC;AACH;;AA9B2C,O;;;;;iBAEf,I;;;;;;;iBAGA,G","sourcesContent":["import { _decorator, Component, Node, Vec3, Camera } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CameraController')\nexport class CameraController extends Component {\n    @property({ type: Node, tooltip: '要跟随的目标' })\n    public target: Node | null = null;\n\n    @property({ tooltip: '相机跟随速度' })\n    public followSpeed: number = 5.0;\n\n    private _camera: Camera | null = null;\n    private _currentPos: Vec3 = new Vec3();\n    private _targetPos: Vec3 = new Vec3();\n\n    start() {\n        this._camera = this.getComponent(Camera);\n        if (this.target) {\n            const pos = this.target.worldPosition;\n            this._currentPos.set(pos.x, pos.y, 1000);\n            this.node.setWorldPosition(this._currentPos);\n        }\n    }\n\n    lateUpdate(deltaTime: number) {\n        if (!this.target) return;\n\n        // 获取目标的世界坐标\n        const targetWorldPos = this.target.worldPosition;\n        this._targetPos.set(targetWorldPos.x, targetWorldPos.y, 1000);\n        \n        // 使用线性插值实现平滑跟随\n        Vec3.lerp(this._currentPos, this._currentPos, this._targetPos, this.followSpeed * deltaTime);\n        this.node.setWorldPosition(this._currentPos);\n    }\n}"]}