{"version":3,"sources":["file:///G:/Cocos/KillGrass/PlayableMowGame/PlayableMowGame/assets/scripts/PlayerController.ts"],"names":["_decorator","Component","Node","Vec2","Vec3","input","Input","CCFloat","Graphics","Color","Prefab","instantiate","Camera","Bullet","Enemy","ccclass","property","PlayerController","type","tooltip","_isReloading","_lastShootTime","_currentAmmo","_nearestEnemy","_isTouching","_touchPos","_targetAngle","_currentAngle","_moveDirection","_debugGraphics","onLoad","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","debugMode","getComponent","addComponent","_attackRangeGraphics","graphicsNode","parent","node","strokeColor","lineWidth","error","console","onDestroy","off","update","deltaTime","handleMovementAndRotation","handleCombat","handleDebugDraw","drawAttackRange","shoot","bulletPrefab","startPos","worldPosition","targetPos","direction","x","y","normalize","offsetDistance","spawnPos","bullet","setWorldPosition","angle","Math","atan2","PI","bulletComp","init","clear","circle","attackRange","stroke","event","updateTouchInfo","set","ZERO","camera","scene","getComponentInChildren","touchPos","getUILocation","worldPos","screenToWorld","nodePos","getWorldPosition","dx","dy","handleMovement","handleRotation","isEnemyInRange","enemyPos","myPos","angleDiff","rotationAmount","rotationSpeed","abs","sign","distance","sqrt","pow","stopDistance","moveAmount","moveSpeed","newPos","position","clone","nextX","nextY","mapWidth","mapHeight","setPosition","enemies","children","filter","enemy","isDead","playerPos","contactRadius","log","health","Date","now","reloadTime","maxAmmo","findNearestEnemy","tryShoot","getAllNodes","nodes","forEach","child","concat","allNodes","length","nearest","minDistance","enemyNode","shootInterval","GREEN","moveTo","lineTo"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec2, Vec3, input, Input, EventTouch, CCFloat, Graphics, Color, Prefab, instantiate, Camera, CCBoolean } from 'cc';\r\nimport { Bullet } from './Bullet';\r\nimport { Enemy } from './Enemy';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerController')\r\nexport class PlayerController extends Component {\r\n    // 移动相关属性\r\n    @property({ type: CCFloat, tooltip: '停止距离阈值' })\r\n    public stopDistance: number = 10;\r\n\r\n    @property({ type: CCFloat, tooltip: '角色移动速度 (单位/秒)' })\r\n    public moveSpeed: number = 200;\r\n\r\n    @property({ type: CCFloat, tooltip: '角色旋转速度 (度/秒)' })\r\n    public rotationSpeed: number = 360;\r\n\r\n    // 战斗相关属性\r\n    @property({ type: CCFloat, tooltip: '角色血量' })\r\n    public health: number = 100;\r\n\r\n    @property({ type: CCFloat, tooltip: '攻击范围' })\r\n    public attackRange: number = 360;\r\n\r\n    @property({ type: CCFloat, tooltip: '射击频率(秒)' })\r\n    public shootInterval: number = 0.1;\r\n\r\n    @property({ type: CCFloat, tooltip: '弹夹容量' })\r\n    public maxAmmo: number = 10;\r\n\r\n    @property({ type: CCFloat, tooltip: '换弹时长(秒)' })\r\n    public reloadTime: number = 1;\r\n\r\n    @property({ type: Prefab, tooltip: '子弹预制体' })\r\n    public bulletPrefab: Prefab | null = null;\r\n\r\n    @property({ type: CCFloat, tooltip: '接触检测范围' })\r\n    public contactRadius: number = 20;\r\n\r\n    @property({ type: [Prefab], tooltip: '敌人预制体列表' })\r\n    public enemyPrefabs: Prefab[] = [];\r\n\r\n    @property({ tooltip: '是否启用调试模式' })\r\n    public debugMode: boolean = false;\r\n\r\n    @property({ type: Graphics })\r\n    private _attackRangeGraphics: Graphics | null = null;\r\n    // 私有属性\r\n    private _isReloading: boolean = false;\r\n    private _lastShootTime: number = 0;\r\n    private _currentAmmo: number = 10;\r\n    private _nearestEnemy: Node | null = null;\r\n    private _isTouching: boolean = false;\r\n    private _touchPos: Vec2 = new Vec2();\r\n    private _targetAngle: number = 0;\r\n    private _currentAngle: number = 0;\r\n    private _moveDirection: Vec3 = new Vec3();\r\n    private _debugGraphics: Graphics | null = null;\r\n    @property({ type: CCFloat, tooltip: '地图边界宽度' })\r\n    private mapWidth: number = 4444;\r\n    @property({ type: CCFloat, tooltip: '地图边界高度' })\r\n    private mapHeight: number = 6666;\r\n    onLoad() {\r\n        try {\r\n            input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n            input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n            input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n            input.on(Input.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n\r\n            if (this.debugMode) {\r\n                this._debugGraphics = this.getComponent(Graphics);\r\n                if (!this._debugGraphics) {\r\n                    this._debugGraphics = this.addComponent(Graphics);\r\n                }\r\n            }\r\n\r\n            this._attackRangeGraphics = this.getComponent(Graphics);\r\n            if (!this._attackRangeGraphics) {\r\n                const graphicsNode = new Node('AttackRangeGraphics');\r\n                graphicsNode.parent = this.node;\r\n                this._attackRangeGraphics = graphicsNode.addComponent(Graphics);\r\n                this._attackRangeGraphics.strokeColor = new Color(255, 0, 0, 255);\r\n                this._attackRangeGraphics.lineWidth = 2;\r\n            }\r\n        } catch (error) {\r\n            console.error('PlayerController 初始化失败:', error);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        input.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        input.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        input.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        input.off(Input.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.handleMovementAndRotation(deltaTime);\r\n        this.handleCombat(deltaTime);\r\n        this.handleDebugDraw();\r\n        this.drawAttackRange();\r\n    }\r\n    private shoot() {\r\n        if (!this._nearestEnemy || !this.bulletPrefab) return;\r\n    \r\n        const startPos = this.node.worldPosition;\r\n        const targetPos = this._nearestEnemy.worldPosition;\r\n        // 计算子弹到目标的方向\r\n        const direction = new Vec3(\r\n            targetPos.x - startPos.x,\r\n            targetPos.y - startPos.y,\r\n            0\r\n        ).normalize();\r\n    \r\n        // 从玩家位置偏移一定距离生成子弹\r\n        const offsetDistance = 50;\r\n        const spawnPos = new Vec3(\r\n            startPos.x + direction.x * offsetDistance,\r\n            startPos.y + direction.y * offsetDistance,\r\n            0\r\n        );\r\n    \r\n        const bullet = instantiate(this.bulletPrefab);\r\n        bullet.parent = this.node.parent;\r\n        bullet.setWorldPosition(spawnPos);\r\n        // 设置子弹朝向\r\n        const angle = Math.atan2(direction.y, direction.x) * 180 / Math.PI;\r\n        bullet.angle = angle - 90;  // -90是因为子弹sprite默认朝上\r\n    \r\n        const bulletComp = bullet.getComponent(Bullet);\r\n        if (bulletComp) {\r\n            bulletComp.init(direction);\r\n        }\r\n    }\r\n\r\n    private drawAttackRange() {\r\n        if (!this._attackRangeGraphics) return;\r\n        this._attackRangeGraphics.clear();\r\n        this._attackRangeGraphics.circle(0, 0, this.attackRange);\r\n        this._attackRangeGraphics.stroke();\r\n    }\r\n\r\n    private onTouchStart(event: EventTouch) {\r\n        this._isTouching = true;\r\n        this.updateTouchInfo(event);\r\n    }\r\n\r\n    private onTouchMove(event: EventTouch) {\r\n        this.updateTouchInfo(event);\r\n    }\r\n\r\n    private onTouchEnd() {\r\n        this._isTouching = false;\r\n        this._moveDirection.set(Vec3.ZERO);\r\n    }\r\n\r\n    private updateTouchInfo(event: EventTouch) {\r\n        const camera = this.node.scene.getComponentInChildren(Camera);\r\n        if (!camera) return;\r\n\r\n        const touchPos = event.getUILocation();\r\n        const worldPos = new Vec3();\r\n        camera.screenToWorld(new Vec3(touchPos.x, touchPos.y, 0), worldPos);\r\n        this._touchPos.set(worldPos.x, worldPos.y);\r\n\r\n        const nodePos = this.node.getWorldPosition();\r\n        const dx = worldPos.x - nodePos.x;\r\n        const dy = worldPos.y - nodePos.y;\r\n\r\n        this._targetAngle = (Math.atan2(dx, dy) * 180 / Math.PI);\r\n        if (this._targetAngle < 0) {\r\n            this._targetAngle += 360;\r\n        }\r\n        \r\n        this._moveDirection.x = dx;\r\n        this._moveDirection.y = dy;\r\n        this._moveDirection.normalize();\r\n    }\r\n    private handleMovementAndRotation(deltaTime: number) {\r\n        // 移动需要触控\r\n        if (this._isTouching) {\r\n            this.handleMovement(deltaTime);\r\n        }\r\n        // 旋转不需要触控条件\r\n        this.handleRotation(deltaTime);\r\n    }\r\n    private handleRotation(deltaTime: number) {\r\n        if (this._nearestEnemy && this.isEnemyInRange(this._nearestEnemy)) {\r\n            const enemyPos = this._nearestEnemy.worldPosition;\r\n            const myPos = this.node.worldPosition;\r\n            const dx = enemyPos.x - myPos.x;\r\n            const dy = enemyPos.y - myPos.y;\r\n            this._targetAngle = (Math.atan2(dx, dy) * 180 / Math.PI);\r\n        }\r\n\r\n        let angleDiff = this._targetAngle - this._currentAngle;\r\n        if (angleDiff > 180) angleDiff -= 360;\r\n        else if (angleDiff < -180) angleDiff += 360;\r\n        \r\n        const rotationAmount = this.rotationSpeed * deltaTime;\r\n        if (Math.abs(angleDiff) > rotationAmount) {\r\n            this._currentAngle += Math.sign(angleDiff) * rotationAmount;\r\n        } else {\r\n            this._currentAngle = this._targetAngle;\r\n        }\r\n\r\n        if (this._currentAngle >= 360) {\r\n            this._currentAngle -= 360;\r\n        } else if (this._currentAngle < 0) {\r\n            this._currentAngle += 360;\r\n        }\r\n\r\n        this.node.angle = -this._currentAngle;\r\n    }\r\n    private handleMovement(deltaTime: number) {\r\n        const nodePos = this.node.getWorldPosition();\r\n        const distance = Math.sqrt(\r\n            Math.pow(this._touchPos.x - nodePos.x, 2) + \r\n            Math.pow(this._touchPos.y - nodePos.y, 2)\r\n        );\r\n    \r\n        if (distance > this.stopDistance) {\r\n            const moveAmount = this.moveSpeed * deltaTime;\r\n            const newPos = this.node.position.clone();\r\n            const nextX = newPos.x + this._moveDirection.x * moveAmount;\r\n            const nextY = newPos.y + this._moveDirection.y * moveAmount;\r\n            // 分别处理 X 和 Y 方向的移动，允许单方向移动\r\n            newPos.x = Math.abs(nextX) <= this.mapWidth/2 ? nextX : newPos.x;\r\n            newPos.y = Math.abs(nextY) <= this.mapHeight/2 ? nextY : newPos.y;\r\n            this.node.setPosition(newPos);\r\n        }\r\n    }\r\n    private handleCombat(deltaTime: number) {\r\n        const enemies = this.node.scene.children.filter(node => {\r\n            const enemy = node.getComponent(Enemy);\r\n            return enemy && !enemy.isDead();\r\n        });\r\n    \r\n        if (enemies) {\r\n            const playerPos = this.node.worldPosition;\r\n            for (const enemy of enemies) {\r\n                const distance = Vec3.distance(playerPos, enemy.worldPosition);\r\n                if (distance <= this.contactRadius) {\r\n                    console.log('玩家被敌人接触!');\r\n                    this.health -= 10;\r\n                    if (this.health <= 0) {\r\n                        console.log('玩家死亡');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        if (this._isReloading) {\r\n            if (Date.now() - this._lastShootTime >= this.reloadTime * 1000) {\r\n                this._isReloading = false;\r\n                this._currentAmmo = this.maxAmmo;\r\n            }\r\n            return;\r\n        }\r\n    \r\n        this.findNearestEnemy();\r\n        if (this._nearestEnemy && this.isEnemyInRange(this._nearestEnemy)) {\r\n            this.tryShoot();\r\n        }\r\n    }\r\n    private findNearestEnemy() {\r\n        const getAllNodes = (node: Node): Node[] => {\r\n            let nodes: Node[] = [node];\r\n            node.children.forEach(child => {\r\n                nodes = nodes.concat(getAllNodes(child));\r\n            });\r\n            return nodes;\r\n        };\r\n    const allNodes = getAllNodes(this.node.scene);\r\n    const enemies = allNodes.filter(node => {\r\n        const enemy = node.getComponent(Enemy);\r\n        return enemy && !enemy.isDead();\r\n    });\r\n    if (!enemies || enemies.length === 0) {\r\n        this._nearestEnemy = null;\r\n        return;\r\n    }\r\n    let nearest = enemies[0];\r\n    let minDistance = Vec3.distance(this.node.worldPosition, nearest.worldPosition);\r\n    for (const enemy of enemies) {\r\n        const distance = Vec3.distance(this.node.worldPosition, enemy.worldPosition);\r\n        if (distance < minDistance) {\r\n            minDistance = distance;\r\n            nearest = enemy;\r\n        }\r\n    }\r\n    this._nearestEnemy = nearest;\r\n    }\r\n    private isEnemyInRange(enemyNode: Node): boolean {\r\n        if (!enemyNode || !enemyNode.position) {\r\n            return false;\r\n        }\r\n        const enemy = enemyNode.getComponent(Enemy);\r\n        if (!enemy || enemy.isDead()) {\r\n            return false;\r\n        }\r\n        const distance = Vec3.distance(this.node.position, enemyNode.position);\r\n        return distance <= this.attackRange;\r\n    }\r\n    private tryShoot() {\r\n        const now = Date.now();\r\n        if (now - this._lastShootTime < this.shootInterval * 1000) return;\r\n\r\n        if (this._currentAmmo <= 0) {\r\n            this._isReloading = true;\r\n            this._lastShootTime = now;\r\n            return;\r\n        }\r\n\r\n        this.shoot();\r\n        this._currentAmmo--;\r\n        this._lastShootTime = now;\r\n    }\r\n\r\n    private handleDebugDraw() {\r\n        if (!this.debugMode || !this._debugGraphics || !this._isTouching) return;\r\n        \r\n        this._debugGraphics.clear();\r\n        this._debugGraphics.strokeColor = Color.GREEN;\r\n        this._debugGraphics.lineWidth = 2;\r\n        this._debugGraphics.moveTo(0, 0);\r\n        this._debugGraphics.lineTo(\r\n            this._moveDirection.x * 100,\r\n            this._moveDirection.y * 100\r\n        );\r\n        this._debugGraphics.stroke();\r\n    }\r\n}"]}