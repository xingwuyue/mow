{"version":3,"sources":["file:///G:/Cocos/KillGrass/gecao/assets/scripts/Bullet.ts"],"names":["_decorator","Component","Vec3","Collider2D","Contact2DType","Sprite","instantiate","Prefab","Vec2","CircleCollider2D","PhysicsSystem2D","Enemy","ccclass","property","Bullet","type","tooltip","_direction","init","direction","set","update","deltaTime","moveAmount","speed","currentPos","node","getPosition","setPosition","x","y","z","collider","getComponent","point","results","instance","testPoint","result","group","enemy","takeDamage","damage","hitEffectPrefab","hitEffect","parent","setWorldPosition","getWorldPosition","scheduleOnce","destroy","start","enabled","on","BEGIN_CONTACT","onBeginContact","PRE_SOLVE","enable","lifeTime","onDestroy","off","selfCollider","otherCollider","contact"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, Collider2D, Contact2DType, IPhysics2DContact, \r\n    Sprite, instantiate, Prefab, Vec2, physics, Rect, CircleCollider2D, PhysicsSystem2D } from 'cc';\r\nimport { Enemy } from './Enemy';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Bullet')\r\nexport class Bullet extends Component {\r\n    @property({ type: Prefab, tooltip: '命中特效预制体' })\r\n    public hitEffectPrefab: Prefab = null;\r\n\r\n    @property({ tooltip: '子弹速度' })\r\n    public speed: number = 500;\r\n\r\n    @property({ tooltip: '子弹伤害' })\r\n    public damage: number = 100;\r\n\r\n    @property({ tooltip: '销毁时间' })\r\n    public lifeTime: number = 2;\r\n\r\n    private _direction: Vec3 = new Vec3();\r\n    \r\n\r\n    public init(direction: Vec3) {\r\n        this._direction.set(direction);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        // 每帧更新子弹位置\r\n        const moveAmount = this.speed * deltaTime;\r\n        const currentPos = this.node.getPosition();\r\n        this.node.setPosition(\r\n            currentPos.x + this._direction.x * moveAmount,\r\n            currentPos.y + this._direction.y * moveAmount,\r\n            currentPos.z\r\n        );\r\n\r\n        // 使用圆形检测敌人\r\n        const collider = this.getComponent(CircleCollider2D);\r\n        if (collider) {\r\n            const point = new Vec2(currentPos.x, currentPos.y);\r\n            const results = PhysicsSystem2D.instance.testPoint(point);\r\n            \r\n            for (const result of results) {\r\n                if (result.group === 4) {\r\n                    const enemy = result.getComponent(Enemy);\r\n                    if (enemy) {\r\n                        enemy.takeDamage(this.damage);\r\n                        \r\n                        // 创建命中特效\r\n                        if (this.hitEffectPrefab) {\r\n                            const hitEffect = instantiate(this.hitEffectPrefab);\r\n                            hitEffect.parent = this.node.parent;\r\n                            hitEffect.setWorldPosition(enemy.node.getWorldPosition());\r\n                            \r\n                            hitEffect.getComponent(Sprite)?.scheduleOnce(() => {\r\n                                hitEffect.destroy();\r\n                            }, 2);\r\n                        }\r\n                        \r\n                        this.node.destroy();\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    start() {\r\n        // 初始化碰撞体\r\n        const collider = this.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.enabled = true;\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.PRE_SOLVE, this.onBeginContact, this);\r\n        }\r\n\r\n        // 确保物理系统已启用\r\n        if (!PhysicsSystem2D.instance.enable) {\r\n            PhysicsSystem2D.instance.enable = true;\r\n        }\r\n\r\n        // 自动销毁\r\n        this.scheduleOnce(() => this.node.destroy(), this.lifeTime);\r\n    }\r\n\r\n\r\n    onDestroy() {\r\n        const collider = this.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.off(Contact2DType.PRE_SOLVE, this.onBeginContact, this);\r\n        }\r\n    }\r\n\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只对敌人产生反应\r\n        if (otherCollider.group === 4) {\r\n            const enemy = otherCollider.getComponent(Enemy);\r\n            if (enemy) {\r\n                // 对敌人造成伤害\r\n                enemy.takeDamage(this.damage);\r\n                \r\n                // 创建命中特效\r\n                if (this.hitEffectPrefab) {\r\n                    const hitEffect = instantiate(this.hitEffectPrefab);\r\n                    hitEffect.parent = this.node.parent;\r\n                    hitEffect.setWorldPosition(enemy.node.getWorldPosition());\r\n                    \r\n                    // 2秒后销毁特效\r\n                    hitEffect.getComponent(Sprite).scheduleOnce(() => {\r\n                        hitEffect.destroy();\r\n                    }, 0.3);\r\n                }\r\n            }\r\n            // 销毁子弹\r\n            this.node.destroy();\r\n        }\r\n    }\r\n}"]}